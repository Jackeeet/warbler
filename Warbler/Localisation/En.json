{
  "errors": {
    "syntax": {
      "unexpectedChar": "$\"Unexpected character: {_input[_currentChar - 1]} at position {_currentLinePos - 1}\"",
      "unknownEscape": "$\"Unknown escape sequence at position {_currentLinePos}\"",
      "unterminatedString": "$\"Expected a \\\" at position {_currentLinePos}\"",
      "apostropheAtEof": "$\"Unexpected character \\' at position {_currentLinePos}\"",
      "emptyChar": "$\"Empty character literal at position {_currentLinePos}\"",
      "unterminatedChar": "$\"Expected a closing ' at position {_currentLinePos}\"",
      "unexpectedToken": "$\"Unexpected token {CurrentToken}\"",
      "expectedColon": "Expected a ':' ",
      "expectedClosingBracket": "Expected a ')' after an expression",
      "expectedExpression": "Expected an expression"
    },
    "type": {
      "negateNonBoolean": "The '!' operator can only be used with Boolean expressions",
      "negateNonNumeric": "The '-' operator can only be used with Double or Integer expressions",
      "nonNumericBinaryOperands": "Both operands must be either Integer or Double",
      "nonStringConcatenation": "The '++' operator can only be used with expressions of type String",
      "comparisonOperandsMismatch": "$\"Cannot compare expressions of types {left.Type} and {right.Type}\"",
      "nonBooleanTernaryCondition": "A ternary condition must be Boolean",
      "ternaryBranchesMismatch": "Ternary branches must have the same type"
    },
    "runtime": {
      "divideByZero": "Division by zero"
    }
  }
}